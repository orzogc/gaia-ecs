name: build

on:
  push:
    paths:
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**/CMakeLists.txt'
      - '**.cmake'
      - 'build.yml'
  pull_request:
    paths:
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**/CMakeLists.txt'
      - '**.cmake'
      - 'build.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-linux:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        target:
          - { os: ubuntu-22.04, pkg: gcc-9,  exe: g++-9 }
          - { os: ubuntu-22.04, pkg: gcc-10, exe: g++-10 }
          - { os: ubuntu-22.04, pkg: clang-11, exe: clang++-11 }
          - { os: ubuntu-22.04, pkg: clang-12, exe: clang++-12 }
          - { os: ubuntu-latest, pkg: gcc-13, exe: g++-13 }
          - { os: ubuntu-latest, pkg: gcc-14, exe: g++-14 }
          - { os: ubuntu-latest, pkg: gcc, exe: g++ }
          - { os: ubuntu-latest, pkg: clang-14, exe: clang++-14 }
          - { os: ubuntu-latest, pkg: clang-15, exe: clang++-15 }
          - { os: ubuntu-latest, pkg: clang-16, exe: clang++-16 }
          - { os: ubuntu-latest, pkg: clang-17, exe: clang++-17 }
          - { os: ubuntu-latest, pkg: clang, exe: clang++ }
        build_type: [Release, Debug]
    runs-on: ${{matrix.target.os}}

    steps:
    - uses: actions/checkout@v4

    - name: Install compiler
      run: |
        sudo apt update
        sudo apt install -y ${{matrix.target.pkg}}

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-${{matrix.target.os}}-${{matrix.target.pkg}}-${{matrix.build_type}}
        create-symlink: true

    - name: Configure CMake
      env:
        CXX: ${{matrix.target.exe}}
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_BUILD_UNITTEST=ON -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      env:
        CXX: ${{matrix.target.exe}}
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: 
      run: |
        ${{github.workspace}}/build/src/test/gaia_test

  build-linux-libcpp:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        target:
          - { os: ubuntu-22.04, pkg: clang-11, exe: clang++-11 }
          - { os: ubuntu-22.04, pkg: clang-12, exe: clang++-12 }
          - { os: ubuntu-latest, pkg: clang-14, exe: clang++-14 }
          - { os: ubuntu-latest, pkg: clang-15, exe: clang++-15 }
          - { os: ubuntu-latest, pkg: clang-16, exe: clang++-16 }
          - { os: ubuntu-latest, pkg: clang-17, exe: clang++-17 }
        build_type: [Release, Debug]
    runs-on: ${{matrix.target.os}}

    steps:
    - uses: actions/checkout@v4

    - name: Install compiler
      run: |
        sudo apt update
        sudo apt install -y ${{matrix.target.pkg}}

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-${{matrix.target.os}}-${{matrix.target.pkg}}-${{matrix.build_type}}
        create-symlink: true
        
    - name: Configure CMake
      env:
        CXX: ${{matrix.target.exe}}
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_BUILD_UNITTEST=ON -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      env:
        CXX: ${{matrix.target.exe}}
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: 
      run: |
        ${{github.workspace}}/build/src/test/gaia_test

  build-windows-arm:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        toolset: [default, v142, v143]
        include:
          - toolset: v142
            toolset_option: -T"v142"
          - toolset: v143
            toolset_option: -T"v143"
        build_type: [Release, Debug]
    runs-on: windows-11-arm

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      run: |
        cmake ${{matrix.toolset_option}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_BUILD_UNITTEST=ON -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: 
      run: |
        ${{github.workspace}}/build/src/test/${{matrix.build_type}}/gaia_test.exe

  build-windows:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        toolset: [default, v142, v143]
        include:
          - toolset: v142
            toolset_option: -T"v142"
          - toolset: v143
            toolset_option: -T"v143"
        build_type: [Release, Debug]
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: sccache
      uses: mozilla-actions/sccache-action@v0.0.9
      with:
        version: "v0.10.0"

    - name: Configure CMake
      run: |
        cmake -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache ${{matrix.toolset_option}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_BUILD_UNITTEST=ON -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: 
      run: |
        ${{github.workspace}}/build/src/test/${{matrix.build_type}}/gaia_test.exe

  build-windows-cl-arm:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        toolset: [clang-cl]
        include:
          - toolset: clang-cl
            toolset_option: -T"ClangCl"
        build_type: [Release, Debug]
    runs-on: windows-11-arm

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      env:
        SCCACHE_GHA_ENABLED: "true"
      run: |
        cmake ${{matrix.toolset_option}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_BUILD_UNITTEST=OFF -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

  build-windows-cl:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        toolset: [clang-cl]
        include:
          - toolset: clang-cl
            toolset_option: -T"ClangCl"
        build_type: [Release, Debug]
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: sccache
      uses: mozilla-actions/sccache-action@v0.0.9
      with:
        version: "v0.10.0"

    - name: Configure CMake
      env:
        SCCACHE_GHA_ENABLED: "true"
      run: |
        cmake -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache ${{matrix.toolset_option}} -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_BUILD_UNITTEST=OFF -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

  build-macos:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v4

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-${{runner.os}}-${{matrix.build_type}}
        create-symlink: true

    - name: Configure CMake
      run: |
        cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DGAIA_MACOS_BUILD_HACK=ON -DGAIA_BUILD_UNITTEST=ON -DGAIA_BUILD_EXAMPLES=ON -DGAIA_BUILD_BENCHMARK=OFF -DGAIA_GENERATE_CC=OFF -S . -B ${{github.workspace}}/build

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: 
      run: |
        ${{github.workspace}}/build/src/test/gaia_test
        