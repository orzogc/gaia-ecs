name: coverage

on:
  push:
    paths:
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**/CMakeLists.txt'
      - '**.cmake'
      - 'build.yml'
      - 'coverage.yml'
  pull_request:
    paths:
      - '**.cpp'
      - '**.h'
      - '**.hpp'
      - '**/CMakeLists.txt'
      - '**.cmake'
      - 'build.yml'
      - 'coverage.yml'
  workflow_dispatch:

jobs:
  codecov:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install lcov

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ccache-${{runner.os}}-clang-Debug
        create-symlink: true

    - name: Compile tests
      env:
        CXXFLAGS: "--coverage -fno-elide-constructors -fno-inline -fno-default-inline -fprofile-update=atomic"
        CC: clang
        CXX: clang++
      run: |
        cmake -DCMAKE_BUILD_TYPE=Debug \
              -DGAIA_BUILD_UNITTEST=ON \
              -DGAIA_BUILD_EXAMPLES=OFF \
              -DGAIA_BUILD_BENCHMARK=OFF \
              -DGAIA_GENERATE_CC=OFF \
              -S . -B ${{github.workspace}}/build
        cmake --build ${{github.workspace}}/build --config Debug

    - name: Run tests
      working-directory: 
      run: |
        ${{github.workspace}}/build/src/test/gaia_test
    
    - name: Collect data
      working-directory: ${{github.workspace}}/build/src/test
      run: |
        lcov -c -d . -o coverage.info --ignore-errors gcov,gcov,mismatch,mismatch
        lcov -l coverage.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        files: ${{github.workspace}}/build/src/test/coverage.info
        name: gaia-ecs
        fail_ci_if_error: true
